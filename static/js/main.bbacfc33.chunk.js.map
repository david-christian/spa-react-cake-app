{"version":3,"sources":["utils.js","WebAPI.js","contexts.js","pages/LoginPage/LoginPage.js","components/Banner/Banner.js","components/Loading/Loading.js","pages/HomePage/HomePage.js","pages/PostPage/PostPage.js","pages/RegisteredPage/RegisteredPage.js","pages/NewPostPage/NewPostPage.js","constants/constants.js","components/Header/Header.js","components/Footer/Footer.js","pages/EditPage/EditPage.js","components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getPost","id","fetch","then","res","json","login","username","password","method","headers","body","JSON","stringify","getMe","authorization","AuthContext","createContext","LoadingContext","ErrorMessage","styled","div","LoginPageContainer","LoginPageFrom","LoginTitle","LoginPage","setUser","useContext","useState","setUsername","setPassword","error","setError","history","useHistory","onSubmit","e","preventDefault","data","ok","message","toString","push","value","onChange","target","type","BannerContainer","Banner","LoadingWapper","Loading","size","color","HomePageContainer","HomePageWrap","HomePageSection","PostsContainer","Link","PostsImage","PostsTitle","PostsDate","HomePagePage","PageContainer","PagePrev","button","PageNext","PageStatus","HomePageBottom","HomePagePosts","post","to","style","backgroundImage","image","title","Date","createdAt","toLocaleString","PageTion","allPage","page","setPage","handleButtonClick","onClick","HomePage","isGetingPostPage","setIsGetingPostPage","posts","setPosts","setAllPage","isLoading","setIsLoading","useEffect","Math","ceil","length","limit","getPostsPage","map","PostPageContainer","PostPageBlock","PostPageTitle","PostPageDate","PostPageImage","PostPageBody","PostPageButtonBlock","PostPageEditButton","PostPageDeleteButton","PostPageButton","user","handleEditButton","handleDeleteButton","userId","PostPage","setPost","useParams","postId","deletePost","ErrorRegisterMessage","RegisteredPageContainer","RegisteredPageFrom","RegisteredTitle","SubmitLoading","RegisteredPage","registerNickname","setRegisterNickname","registerUsername","setRegisterUsername","registerPassword","setRegisterPassword","registerError","setRegisterError","nickname","NewPostContainer","NewPostForm","form","NewPostTitle","input","NewPostBody","textarea","NewPostBottom","NewPostImage","SubmitButton","NewPostError","NewPostPrivew","NewPostPage","setTitle","content","setContent","newPostError","setNewPostError","imageUrl","setImageUrl","sendPost","catch","err","rows","placeholder","src","alt","MEDIA_QUERY","HeaderContainer","Brand","NavbarList","HeaderLeftBlock","HeaderRightBlock","Nav","props","$active","NavbarGetingBlock","NavbarGeting","pathname","Header","location","useLocation","isGetingUser","setIsGetingUser","FooterContainer","Footer","EditPageContainer","EditPageForm","EditBlockTitle","EditBlockContent","EditButton","EditError","EditPage","editTitle","setEditTitle","editContent","setEditContent","editError","setEditError","editPost","Reat","App","Top","path","window","scrollTo","Provider","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbacfc33.chunk.js","sourcesContent":["const TOKEN_NAME = \"token\";\r\n\r\nexport const setAuthToken = (token) => {\r\n  return localStorage.setItem(TOKEN_NAME, token);\r\n};\r\n\r\nexport const getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME);\r\n};\r\n","import { getAuthToken } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://powerful-eyrie-65893.herokuapp.com\";\r\n\r\nexport const getPosts = () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\r\n    res.json()\r\n  );\r\n};\r\n\r\nexport const getPostsPage = (page, limit) => {\r\n  return fetch(\r\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_page=${page}&_limit=${limit}`\r\n  ).then((res) => res.json());\r\n};\r\n\r\nexport const getPost = (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`).then((res) => res.json());\r\n};\r\n\r\nexport const login = (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const getMe = () => {\r\n  const token = getAuthToken();\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const register = (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const sendPost = (title, body, imageUrl) => {\r\n  const token = getAuthToken();\r\n  if (!imageUrl) {\r\n    imageUrl = \"https://i.imgur.com/NOb569b.jpg\";\r\n  }\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n      image: imageUrl,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const editPost = (title, body, id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      title: title,\r\n      body: body,\r\n    }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deletePost = (id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\nexport const LoadingContext = createContext(null);\r\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login, getMe } from \"../../WebAPI\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext } from \"../../contexts\";\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst LoginPageContainer = styled.div`\r\n  padding: 200px 20px 500px 20px;\r\n`;\r\n\r\nconst LoginPageFrom = styled.div`\r\n  max-width: 450px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 30px 50px;\r\n  margin: 0 auto;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n\r\n  p {\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  button {\r\n    border-radius: 20px;\r\n    padding: 6px 20px;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst LoginTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    if (username === \"\" && password === \"\") {\r\n      e.preventDefault();\r\n      setError(\"帳號或密碼未輸入\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    setError(null);\r\n    login(username, password).then((data) => {\r\n      if (data.ok === 0) {\r\n        return setError(data.message);\r\n      }\r\n      setAuthToken(data.token);\r\n      getMe().then((res) => {\r\n        if (res.ok !== 1) {\r\n          setAuthToken(null);\r\n          return setError(res.toString());\r\n        }\r\n        setUser(res.data);\r\n        history.push(\"/\");\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <LoginPageContainer>\r\n      <LoginPageFrom>\r\n        <form onSubmit={handleSubmit}>\r\n          <LoginTitle>登入</LoginTitle>\r\n          <p>※ 此論壇僅供測試用，密碼均設為 Lidemy</p>\r\n          <div>\r\n            username:\r\n            <input\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            password:\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button>登入</button>\r\n          <ErrorMessage>{error && error}</ErrorMessage>\r\n        </form>\r\n      </LoginPageFrom>\r\n    </LoginPageContainer>\r\n  );\r\n}\r\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BannerContainer = styled.div`\n  position: relative;\n  background: url(\"https://i.imgur.com/mMWUOrD.jpg\") no-repeat center / cover;\n  height: 600px;\n  width: 100%;\n`;\n\nexport default function Banner() {\n  return <BannerContainer></BannerContainer>;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { RingLoader } from \"react-spinners\";\n\nconst LoadingWapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.6);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default function Loading() {\n  return (\n    <LoadingWapper>\n      <RingLoader size={60} color={\"#4A90E2\"} />\n    </LoadingWapper>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { getPosts, getPostsPage } from \"../../WebAPI\";\nimport Banner from \"../../components/Banner/Banner\";\nimport { LoadingContext } from \"../../contexts\";\nimport { useContext } from \"react/cjs/react.development\";\nimport Loading from \"../../components/Loading/Loading\";\n\nconst HomePageContainer = styled.div`\n  background: #c1d4d9;\n`;\n\nconst HomePageWrap = styled.div`\n  margin: 0 auto;\n  width: 90%;\n`;\n\nconst HomePageSection = styled.div`\n  display: inline-flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst PostsContainer = styled(Link)`\n  width: 300px;\n  height: 400px;\n  position: relative;\n  background-color: #f2cbc2;\n  padding: 5px;\n  border-radius: 8px;\n  margin: 30px;\n  transition: 0.2s;\n  &:hover {\n    transform: scale(1.05);\n    box-shadow: 5px 5px 15px 0px black;\n  }\n`;\n\nconst PostsImage = styled.div`\n  height: 70%;\n  width: 100%;\n  background-size: cover;\n  border-radius: 8px;\n`;\n\nconst PostsTitle = styled.div`\n  font-size: 24px;\n  width: 100%;\n  color: white;\n  word-break: break-all;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  text-align: center;\n  margin-top: 10px;\n`;\n\nconst PostsDate = styled.div`\n  color: rgba(0, 0, 0, 0.8);\n  position: absolute;\n  padding: 10px;\n  bottom: 0;\n  right: 0;\n`;\n\nconst HomePagePage = styled.div`\n  position: relative;\n  height: 200px;\n`;\n\nconst PageContainer = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  color: white;\n`;\nconst PagePrev = styled.button``;\nconst PageNext = styled.button``;\nconst PageStatus = styled.div``;\n\nconst HomePageBottom = styled.div`\n  background: url(\"https://i.imgur.com/t6SsRwM.jpg\") no-repeat center / cover;\n  height: 400px;\n  color: white;\n  padding-top: 10px;\n  position: relative;\n\n  div {\n    text-align: center;\n  }\n`;\n\nfunction HomePagePosts({ post }) {\n  return (\n    <PostsContainer to={`/posts/${post.id}`}>\n      <PostsImage style={{ backgroundImage: `url(${post.image})` }} />\n      <PostsTitle>{post.title}</PostsTitle>\n      <PostsDate>{new Date(post.createdAt).toLocaleString()}</PostsDate>\n    </PostsContainer>\n  );\n}\n\nfunction PageTion({ allPage, page, setPage }) {\n  const handleButtonClick = (e) => {\n    if (e === \"next\" && page < allPage) {\n      return setPage(page + 1);\n    }\n    if (e === \"prev\" && page >= 2) {\n      return setPage(page - 1);\n    }\n    return;\n  };\n  return (\n    <PageContainer>\n      <PagePrev onClick={() => handleButtonClick(\"prev\")}>上一頁</PagePrev>\n      <PageNext onClick={() => handleButtonClick(\"next\")}>下一頁</PageNext>\n      <PageStatus>\n        第{page}頁/共{allPage}頁\n      </PageStatus>\n    </PageContainer>\n  );\n}\n\nHomePagePosts.propTypes = {\n  post: PropTypes.object,\n};\n\nexport default function HomePage() {\n  const [isGetingPostPage, setIsGetingPostPage] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [allPage, setAllPage] = useState();\n  const [page, setPage] = useState(1);\n  const limit = 5;\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPosts()\n      .then((posts) => {\n        setAllPage(Math.ceil(posts.length / limit));\n      })\n      .then((e) => {\n        setIsLoading(false);\n      });\n  }, [setIsLoading]);\n  useEffect(() => {\n    setIsLoading(true);\n    getPostsPage(page, limit)\n      .then((res) => {\n        setPosts(res);\n        setIsGetingPostPage(true);\n      })\n      .then((e) => {\n        setIsLoading(false);\n      });\n  }, [page, setIsLoading]);\n  return (\n    <HomePageContainer>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <Banner />\n          <HomePageWrap>\n            <HomePageSection>\n              {posts.map((post) => (\n                <HomePagePosts key={post.id} post={post} />\n              ))}\n            </HomePageSection>\n          </HomePageWrap>\n          <HomePagePage>\n            {isGetingPostPage && (\n              <PageTion allPage={allPage} page={page} setPage={setPage} />\n            )}\n          </HomePagePage>\n          <HomePageBottom>\n            <div>\n              <h1>關於 Cake Garden</h1>\n              <h3>一個能分享蛋糕的美好小天地</h3>\n            </div>\n          </HomePageBottom>\n        </>\n      )}\n    </HomePageContainer>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost } from \"../../WebAPI\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { deletePost } from \"../../WebAPI\";\n\nconst PostPageContainer = styled.div`\n  padding: 100px 20px 500px 20px;\n`;\n\nconst PostPageBlock = styled.div`\n  max-width: 700px;\n  margin: 0 auto;\n  box-shadow: 0px 5px 8px black;\n  border-top: solid 2px black;\n  padding: 40px 60px;\n  background-color: rgba(255, 255, 255, 0.8);\n  border-radius: 8px;\n`;\n\nconst PostPageTitle = styled.div`\n  font-size: 60px;\n  word-break: break-all;\n`;\n\nconst PostPageDate = styled.div`\n  color: black;\n  margin-left: 10px;\n  margin-top: 10px;\n`;\n\nconst PostPageImage = styled.div`\n  max-width: 100%;\n  height: 300px;\n  background-size: cover;\n  border-radius: 8px;\n  margin-top: 30px;\n`;\n\nconst PostPageBody = styled.div`\n  font-size: 24px;\n  margin-left: 10px;\n  margin-top: 20px;\n  white-space: pre-wrap;\n  word-break: break-all;\n`;\n\nconst PostPageButtonBlock = styled.div``;\nconst PostPageEditButton = styled.button`\n  margin-top: 20px;\n  border: 1px solid transparent;\n  padding: 5px 10px;\n  border-radius: 8px;\n  background-color: green;\n  color: white;\n  margin-right: 20px;\n`;\n\nconst PostPageDeleteButton = styled.button`\n  margin-top: 20px;\n  border: 1px solid transparent;\n  padding: 5px 10px;\n  border-radius: 8px;\n  background-color: green;\n  color: white;\n`;\n\nfunction PostPageButton({ user, post, handleEditButton, handleDeleteButton }) {\n  return (\n    <PostPageButtonBlock>\n      {user && post && user.id === post.userId && (\n        <PostPageEditButton onClick={() => handleEditButton(post.id)}>\n          編輯\n        </PostPageEditButton>\n      )}\n      {user &&\n        post &&\n        (user.id === post.userId || user.username === \"admin\") && (\n          <PostPageDeleteButton onClick={() => handleDeleteButton(post.id)}>\n            刪除\n          </PostPageDeleteButton>\n        )}\n    </PostPageButtonBlock>\n  );\n}\n\nexport default function PostPage() {\n  const [post, setPost] = useState(null);\n  const { id } = useParams();\n  const { user } = useContext(AuthContext);\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    getPost(id)\n      .then((post) => {\n        setIsLoading(true);\n        setPost(post[0]);\n      })\n      .then((e) => {\n        setIsLoading(false);\n      });\n  }, [id, setIsLoading]);\n\n  const handleEditButton = (postId) => {\n    history.push(`/edit/${postId}`);\n  };\n\n  const handleDeleteButton = (postId) => {\n    deletePost(postId).then((res) => {\n      history.push(\"/\");\n    });\n  };\n  return (\n    <PostPageContainer>\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <PostPageBlock>\n          <PostPageTitle>\n            {post && post.title}\n            <hr />\n          </PostPageTitle>\n          <PostPageDate>\n            時間：{post && new Date(post.createdAt).toLocaleString()}\n          </PostPageDate>\n          <PostPageImage\n            style={{ backgroundImage: `url(${post && post.image})` }}\n          ></PostPageImage>\n          <PostPageBody>{post && post.body}</PostPageBody>\n          <PostPageButton\n            user={user}\n            post={post}\n            handleEditButton={handleEditButton}\n            handleDeleteButton={handleDeleteButton}\n          />\n        </PostPageBlock>\n      )}\n    </PostPageContainer>\n  );\n}\n","import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { login, getMe, register } from \"../../WebAPI\";\r\nimport { setAuthToken } from \"../../utils\";\r\nimport { AuthContext, LoadingContext } from \"../../contexts\";\r\nconst ErrorRegisterMessage = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst RegisteredPageContainer = styled.div`\r\n  padding: 200px 20px 500px 20px;\r\n`;\r\n\r\nconst RegisteredPageFrom = styled.div`\r\n  max-width: 450px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 30px 50px;\r\n  margin: 0 auto;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n\r\n  input {\r\n    width: 100%;\r\n    padding: 5px;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  button {\r\n    border-radius: 20px;\r\n    padding: 6px 20px;\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nconst RegisteredTitle = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst SubmitLoading = styled.div``;\r\n\r\nexport default function RegisteredPage() {\r\n  const { setUser } = useContext(AuthContext);\r\n  const { isLoading, setIsLoading } = useContext(LoadingContext);\r\n  const [registerNickname, setRegisterNickname] = useState(\"\");\r\n  const [registerUsername, setRegisterUsername] = useState(\"\");\r\n  const [registerPassword, setRegisterPassword] = useState(\"\");\r\n\r\n  const [registerError, setRegisterError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    if (\r\n      registerNickname === \"\" &&\r\n      registerUsername === \"\" &&\r\n      registerPassword === \"\"\r\n    ) {\r\n      setIsLoading(false);\r\n      setRegisterError(\"暱稱或帳號或密碼 未輸入\");\r\n      return;\r\n    }\r\n    setRegisterError(null);\r\n    register(registerNickname, registerUsername, registerPassword).then(\r\n      (data) => {\r\n        if (data.ok === 0) {\r\n          setIsLoading(false);\r\n          return setRegisterError(data.message);\r\n        }\r\n        // 因為後台會將註冊密碼改成 \"Lidemy\"\r\n        login(registerUsername, \"Lidemy\").then((data) => {\r\n          if (data.ok === 0) {\r\n            setIsLoading(false);\r\n            return setRegisterError(data.message);\r\n          }\r\n          setAuthToken(data.token);\r\n          getMe().then((res) => {\r\n            if (res.ok !== 1) {\r\n              setIsLoading(false);\r\n              setAuthToken(null);\r\n              return setRegisterError(res.toString());\r\n            }\r\n            setIsLoading(false);\r\n            setUser(res.data);\r\n            history.push(\"/\");\r\n          });\r\n        });\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <RegisteredPageContainer>\r\n      <RegisteredPageFrom>\r\n        <form onSubmit={handleRegisterSubmit}>\r\n          <RegisteredTitle>註冊</RegisteredTitle>\r\n          <div>\r\n            nickname:\r\n            <input\r\n              value={registerNickname}\r\n              onChange={(e) => setRegisterNickname(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            username:\r\n            <input\r\n              value={registerUsername}\r\n              onChange={(e) => setRegisterUsername(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            password:\r\n            <input\r\n              type=\"password\"\r\n              value={registerPassword}\r\n              onChange={(e) => setRegisterPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          {isLoading ? (\r\n            <SubmitLoading>資料驗證中...</SubmitLoading>\r\n          ) : (\r\n            <button>註冊</button>\r\n          )}\r\n          <ErrorRegisterMessage>\r\n            {registerError && registerError}\r\n          </ErrorRegisterMessage>\r\n        </form>\r\n      </RegisteredPageFrom>\r\n    </RegisteredPageContainer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { sendPost } from \"../../WebAPI\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NewPostContainer = styled.div`\r\n  padding: 100px 20px 500px 20px;\r\n`;\r\n\r\nconst NewPostForm = styled.form`\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 5px 8px black;\r\n  border-top: solid 2px black;\r\n  padding: 40px 60px;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n`;\r\nconst NewPostTitle = styled.input`\r\n  width: 100%;\r\n  font-size: 20px;\r\n  padding: 6px;\r\n  margin-top: 40px;\r\n  box-sizing: border-box;\r\n`;\r\nconst NewPostBody = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst NewPostBottom = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst NewPostImage = styled.input`\r\n  padding: 5px;\r\n`;\r\nconst SubmitButton = styled.div`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  float: right;\r\n\r\n  button {\r\n    padding: 6px 20px;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nconst NewPostError = styled.div`\r\n  color: red;\r\n`;\r\n\r\nconst NewPostPrivew = styled.div`\r\n  img {\r\n    height: 200px;\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport default function NewPostPage() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [newPostError, setNewPostError] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleNewPostSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\" && content === \"\") {\r\n      e.preventDefault();\r\n      setNewPostError(\"標題或內容不得為空\");\r\n      return;\r\n    }\r\n    if (!imageUrl) {\r\n      setImageUrl(\"https://i.imgur.com/NOb569b.jpg\");\r\n    }\r\n    sendPost(title, content, imageUrl)\r\n      .then((res) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        setNewPostError(err.message);\r\n      });\r\n  };\r\n  return (\r\n    <NewPostContainer>\r\n      <NewPostForm onSubmit={handleNewPostSubmit}>\r\n        <NewPostTitle\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <NewPostBody\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          rows={14}\r\n        />\r\n        <NewPostBottom>\r\n          <NewPostImage\r\n            value={imageUrl}\r\n            placeholder=\"請輸入圖片URL\"\r\n            type=\"text\"\r\n            onChange={(e) => setImageUrl(e.target.value)}\r\n          ></NewPostImage>\r\n          <NewPostError>{newPostError && newPostError}</NewPostError>\r\n        </NewPostBottom>\r\n        <NewPostPrivew>\r\n          <img src={imageUrl} alt=\"預覽封面\"></img>\r\n        </NewPostPrivew>\r\n        <SubmitButton>\r\n          <button>送出文章</button>\r\n        </SubmitButton>\r\n      </NewPostForm>\r\n    </NewPostContainer>\r\n  );\r\n}\r\n","export const MEDIA_QUERY = \"@media screen and (max-width: 768px)\";\r\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../contexts\";\nimport { setAuthToken } from \"../../utils\";\nimport { MEDIA_QUERY } from \"../../constants/constants\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 32px;\n  box-shadow: 2px 5px 10px rgba(0, 0, 0, 0.8);\n  background-color: rgba(153, 177, 191, 0.6);\n  z-index: 2;\n  position: relative;\n\n  ${MEDIA_QUERY} {\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n  }\n`;\n\nconst Brand = styled(Link)`\n  font-size: 32px;\n  font-weight: bold;\n  color: white;\n`;\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 64px;\n`;\n\nconst HeaderLeftBlock = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavbarList} {\n    margin-left: 64px;\n  }\n`;\n\nconst HeaderRightBlock = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  box-sizing: border-box;\n  width: 100px;\n  cursor: pointer;\n  color: black;\n  text-decoration: none;\n  color: white;\n  ${(props) => props.$active && `background: #696969;`}\n`;\n\nconst NavbarGetingBlock = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nfunction NavbarGeting({ user, pathname }) {\n  return (\n    <NavbarGetingBlock>\n      {!user && (\n        <Nav to=\"/login\" $active={pathname === \"/login\"}>\n          登入\n        </Nav>\n      )}\n      {!user && (\n        <Nav to=\"/registered\" $active={pathname === \"/registered\"}>\n          註冊\n        </Nav>\n      )}\n    </NavbarGetingBlock>\n  );\n}\n\nexport default function Header() {\n  const location = useLocation();\n  const { user, setUser, isGetingUser, setIsGetingUser } = useContext(\n    AuthContext\n  );\n  const history = useHistory();\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    setIsGetingUser(true);\n\n    setUser(null);\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n  const pathname = location.pathname;\n  return (\n    <HeaderContainer>\n      <HeaderLeftBlock>\n        <Brand to=\"/\">Cake Garden</Brand>\n      </HeaderLeftBlock>\n      <HeaderRightBlock>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          {user && (\n            <Nav to=\"/newpost\" $active={pathname === \"/newpost\"}>\n              發佈文章\n            </Nav>\n          )}\n        </NavbarList>\n        <NavbarList>\n          {user && (\n            <Nav to=\"/\" onClick={handleLogout}>\n              登出\n            </Nav>\n          )}\n          {isGetingUser && <NavbarGeting user={user} pathname={pathname} />}\n        </NavbarList>\n      </HeaderRightBlock>\n    </HeaderContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MEDIA_QUERY } from \"../../constants/constants\";\n\nconst FooterContainer = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 60px;\n  color: white;\n  background: rgba(0, 0, 0, 0.7);\n  letter-spacing: 1.1px;\n\n  ${MEDIA_QUERY} {\n    flex-direction: column;\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      <div>※ 本站僅供測試使用，請勿留下真實資訊</div>\n      <div>Copyright © 2020 Powered by React.js</div>\n    </FooterContainer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPost, editPost } from \"../../WebAPI\";\r\n\r\nconst EditPageContainer = styled.div`\r\n  padding: 100px 20px 500px 20px;\r\n`;\r\n\r\nconst EditPageForm = styled.form`\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 5px 8px black;\r\n  border-top: solid 2px black;\r\n  padding: 40px 60px;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst EditBlockTitle = styled.input`\r\n  width: 100%;\r\n  font-size: 20px;\r\n  padding: 6px;\r\n  margin-top: 40px;\r\n  box-sizing: border-box;\r\n`;\r\nconst EditBlockContent = styled.textarea`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 12px;\r\n  box-sizing: border-box;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst EditButton = styled.button`\r\n  display: flex;\r\n  align-self: flex-end;\r\n  float: right;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst EditError = styled.div`\r\n  color: red;\r\n`;\r\n\r\nexport default function EditPage() {\r\n  const [editTitle, setEditTitle] = useState(\"\");\r\n  const [editContent, setEditContent] = useState(\"\");\r\n  const [editError, setEditError] = useState(\"\");\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n\r\n  const handleEditSubmit = (e) => {\r\n    if (editTitle === \"\" && editContent === \"\") {\r\n      e.preventDefault();\r\n      setEditError(\"標題或內容不得為空\");\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    editPost(editTitle, editContent, id).then((res) => {\r\n      history.push(`/posts/${id}`);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPost(id).then((post) => {\r\n      setEditTitle(post[0].title);\r\n      setEditContent(post[0].body);\r\n    });\r\n  }, [id]);\r\n\r\n  return (\r\n    <EditPageContainer>\r\n      <EditPageForm onSubmit={handleEditSubmit}>\r\n        <EditBlockTitle\r\n          value={editTitle}\r\n          onChange={(e) => setEditTitle(e.target.value)}\r\n        />\r\n        <EditBlockContent\r\n          value={editContent}\r\n          onChange={(e) => setEditContent(e.target.value)}\r\n          rows={14}\r\n        />\r\n        <EditError>{editError && editError}</EditError>\r\n        <EditButton>編輯文章</EditButton>\r\n      </EditPageForm>\r\n    </EditPageContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport LoginPage from \"../../pages/LoginPage\";\nimport HomePage from \"../../pages/HomePage\";\nimport PostPage from \"../../pages/PostPage\";\nimport RegisteredPage from \"../../pages/RegisteredPage\";\nimport NewPostPage from \"../../pages/NewPostPage\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nimport EditPage from \"../../pages/EditPage\";\nimport { AuthContext, LoadingContext } from \"../../contexts\";\nimport { getMe } from \"../../WebAPI\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport { getAuthToken } from \"../../utils\";\n\nconst Reat = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\n\nexport default function App() {\n  const [isGetingUser, setIsGetingUser] = useState(false);\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (getAuthToken()) {\n      return getMe().then((res) => {\n        if (res.ok) {\n          setUser(res.data);\n        }\n      });\n    }\n    setIsGetingUser(true);\n  }, []);\n\n  useEffect(() => {}, [user]);\n\n  function Top() {\n    const { path } = useLocation();\n\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, [path]);\n\n    return null;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user, setUser, isGetingUser, setIsGetingUser }}\n    >\n      <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n        <Router>\n          <Top />\n          <Header />\n          <Reat>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomePage />\n              </Route>\n              <Route path=\"/newpost\">\n                <NewPostPage />\n              </Route>\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n              <Route path=\"/posts/:id\">\n                <PostPage />\n              </Route>\n              <Route path=\"/edit/:id\">\n                <EditPage />\n              </Route>\n              <Route path=\"/registered\">\n                <RegisteredPage />\n              </Route>\n            </Switch>\n            <Footer />\n          </Reat>\n        </Router>\n      </LoadingContext.Provider>\n    </AuthContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}